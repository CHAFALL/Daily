@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap');

/* google web font */

/* CSS 변수 */
:root {
  --body-font: 'Noto Sans KR', sans-serif;

  /* Colors */
  --white-color: #ffffff;
  --black-color: #141414;
  --grey-color: #616161;
  --blue-color: #0336ff;
  --red-color: #b71c1c;

  /* Brand Colors */
  --primary-color: var(--blue-color);
  --secondary-color: #26a69a;
  --accent-color: #9c27b0;
  --positive-color: #21ba45;
  --negative-color: var(--red-color);
  --info-color: #31ccec;
  --warning-color: #f2c037;
  --dark-color: #1d1d1d;

  /* 이런식으로 --blue-color와 같이 하면 블루를 레드로 바꾼다거나 할 때 이름이 애매해진다 그래서 primary나 secondary color와 같은 Brand Colors를 이용. */

  /* Font Weight */
  --font-weight-light: 200;
  --font-weight-medium: 400;
  --font-weight-bold: 700;
  --font-weight-black: 900;

  /* Typography */
  --font-size-1: 3.5rem;
  --font-size-2: 2.5rem;
  --font-size-3: 2rem;
  --font-size-4: 1.5rem;
  --font-size-5: 1rem;
  --font-size-6: 0.875rem;

  /* Spacing */
  --spacing-1: 1rem;
  --spacing-2: 2rem;
  --spacing-3: 2.5rem;
  --spacing-4: 3rem;
  --spacing-5: 4rem;

  --header-height: 4.5rem;

  --box-shadow-1: rgba(0, 0, 0, 0.16) 0px 1px 4px;
  --box-shadow-2: rgba(0, 0, 0, 0.35) 0px 5px 15px;

  /* box shadow 검색 (CSS Scan) */
  /* 아니면 특정 사이트에 이쁜것이 있으면 요소 검사를 해서 가져오기 */
}

html {
  scroll-behavior: smooth;
}

body {
  font-family: var(--body-font);
  color: var(--black-color);
  font-size: var(--font-size-5);
  margin-top: var(--header-height);
}

.font-weight-light {
  font-weight: var(--font-weight-light);
}

.font-weight-medium {
  font-weight: var(--font-weight-medium);
}

.font-weight-bold {
  font-weight: var(--font-weight-bold);
}

.font-weight-black {
  font-weight: var(--font-weight-black);
}

/* CSS 변수는 --로 시작하며, var() 함수를 사용하여 값을 참조합니다. */

/* :root"는 CSS에서 변수를 정의하는 데 사용되는 특별한 선택자입니다. 이 선택자는 HTML 문서의 최상위 요소를 나타내며, 보통 <html> 요소를 가리킵니다. */

/* Layout */
.container {
  max-width: 1024px;
  margin: 0 auto;
  padding: 0 var(--spacing-1);
}

/* Header */
.header {
  background-color: var(--dark-color);
  color: var(--white-color);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 100;
}

.nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-weight: var(--font-weight-black);
  height: var(--header-height);
}

/* rem은 웹 문서의 최상위 요소인 HTML 요소의 폰트 크기에 상대적으로 결정 */
/* 디폴트로 16px 이니깐 16 * 4.5rem은 72px */

.nav__logo {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.nav__img {
  width: 42px;
  height: 42px;
}

.nav__brand {
  font-size: var(--fint-size-4);
}
.nav__list {
  display: flex;
}

.nav__item {
  margin-left: var(--spacing-3);
}

.nav__link {
  position: relative;
}

.active-link::after,
.nav__link:hover::after {
  background-color: var(--primary-color);
  height: 0.18rem;
  content: '';
  width: 100%;
  position: absolute;
  left: 0;
  top: 2rem;
}

/* 이 after는 특정 요소 뒤에 콘텐츠를 추가할 때 사용하는 선택자이다 */

/* ::before는 특정 요소의 콘텐츠 앞에 추가적인 내용을 삽입할 때 사용됩니다. */

/* ::after를 안 쓰고 해보니깐 추가되는 느낌이 아니라 같이 적용되는 느낌이었음 */

/* after 콘텐츠의 기본 디스플레이는 inline이다 (width 속성 적용 불가) */

/* absolute 속성은 가장 가까운 relative, absolute, fixed; 또는 sticky가 적용된 부모 요소를 기준으로 합니다.
만약 이러한 부모 요소가 없다면, absolute요소는 문서의 최상위 요소인 <html>을 기준으로 위치가 결정됩니다. */

/* Home */
.home {
  display: flex;
  align-items: center;
  justify-content: space-between;
  /* padding: var(--spacing-5) 0; */

  /* 내생각: container css의 좌우 패딩의 영향을 미치게 하기 위해서 아래와 같이 바꾼듯 */
  /* 나라면 그냥 padding: var(--spacing-5) var(--spacing-1); 이렇게 했을 듯 */

  padding-top: var(--spacing-5);
  padding-bottom: var(--spacing-5);
}

.home__title {
  font-size: var(--font-size-2);
  line-height: calc(var(--font-size-2)) * 1.4;
  font-weight: var(--font-weight-black);
  margin-bottom: var(--spacing-3);
}

.home__title-color {
  color: var(--primary-color);
}

.home__img {
  border-radius: 2rem;
  width: 480px;
  height: 320px;
  object-fit: cover; /* 이미지 비율 유지하며 컨테이너 채움 */
}

.home__social {
  margin-top: var(--spacing-3);
  display: flex;
  column-gap: var(--spacing-1);
}

.home__social-icon {
  font-size: 1.5rem;
  transition: 0.3s;
}
.home__social-icon:hover {
  color: var(--primary-color);
}

/* Button */
.button {
  display: inline-block;
  background-color: var(--primary-color);
  color: white;
  padding: 0.75rem 1.75rem;
  font-weight: var(--font-weight-bold);
  border-radius: 0.5rem;
  transition: 0.3s;
}
.button:hover {
  box-shadow: var(--box-shadow-2);
}

/* button style css */

/* object-fit 값 설명
contain: 이미지의 비율을 유지하면서 가능한 한 크게 만듭니다. 전체 이미지가 보이도록 하되, 빈 공간이 생길 수 있습니다.
cover: 이미지의 비율을 유지하면서 가능한 한 크게 만듭니다. 컨테이너를 완전히 채우지만 일부 이미지가 잘릴 수 있습니다.
fill: 이미지가 컨테이너를 완전히 채우지만 비율이 유지되지 않아 이미지가 찌그러질 수 있습니다.
none: 이미지의 원래 크기를 유지합니다.
scale-down: none 또는 contain 중 더 작은 것을 적용합니다. */

/* Section */
.section {
  padding-top: calc(var(--header-height) + 1rem);
  padding-bottom: calc(var(--header-height) + 1rem);
}
.section__title {
  font-size: var(--font-size-3);
  color: var(--primary-color);
  text-align: center;
  font-weight: var(--font-weight-black);
  margin-bottom: var(--spacing-5);
  position: relative;
}
.section__title::after {
  position: absolute;
  content: '';
  width: 64px;
  height: 0.25rem;
  background-color: var(--primary-color);
  left: 0;
  right: 0;
  top: 3rem;
  margin: 0 auto;
}

.bg-grey-1 {
  background-color: #f6f6f6;
}

.bg-dark {
  background-color: var(--dark-color);
}

/* margin: 0 auto;는 CSS에서 수평 가운데 정렬을 할 때 자주 사용하는 방법입니다. 주로 블록 요소에 적용하여, 해당 요소가 부모 요소 내에서 가로축을 따라 가운데에 배치되도록 합니다. */

/* margin: 요소의 외부 여백을 설정합니다.
0은 위와 아래의 여백을 0으로 설정합니다.
auto는 좌우 여백을 자동으로 설정하여, 남아있는 공간을 동일하게 나눕니다. */

/* About */
.about__container {
  display: flex;
  align-items: center;
  column-gap: 3rem;
}

.about__subtitle {
  font-size: var(--font-size-4);
  font-weight: var(--font-weight-bold);
  margin-bottom: var(--spacing-2);
}

.about__text {
  line-height: 1.4rem;
}

.about__img {
  max-width: 310px;
  height: 380px;
  object-fit: cover;
  border-radius: 0.5rem;
}

/* Skills */
.skills__container {
  display: grid;
  grid-template-columns: 1fr 1fr;
  column-gap: 3rem;
  align-items: center;
}

.skills__subtitle {
  font-size: var(--font-size-4);
  font-weight: var(--font-weight-black);
  margin-bottom: var(--spacing-1);
}

.skills__text {
  line-height: 1.4rem;
}
.skills__data {
  box-shadow: var(--box-shadow-1);
  border-radius: 0.3rem;
  margin-top: var(--spacing-1);
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
  padding: 0.8rem 1rem;
  font-weight: var(--font-weight-bold);
  overflow: hidden;
  cursor: default;
}
.skills__names {
  display: flex;
  align-items: center;
}

.skills__icon {
  font-size: var(--font-size-4);
  margin-right: var(--spacing-2);
  color: var(--primary-color);
}

/* 이거 좋다 */
.skills__progress {
  position: absolute;
  left: 0;
  bottom: 0;
  appearance: none;
  height: 6px;
  width: 100%;
}

.skills__progress::-webkit-progress-bar {
  background: var(--white-color);
  border-radius: 12px;
  width: 100%;
  overflow: hidden;
}

.skills__progress::-webkit-progress-value {
  background: var(--primary-color);
  border-radius: 12px;
  width: 48px;
}

.skills__img {
  width: 100%;
  border-radius: 0.5rem;
}

/* grid-template-columns: 2fr 1fr -> 2대1 비율 */

/* cursor: default;  커서변환 x */

/* overflow: hidden;은 CSS 속성 중 하나로, 요소의 콘텐츠가 요소의 크기(지정된 width와 height)를 초과할 때 초과된 콘텐츠를 어떻게 처리할지를 지정합니다. hidden 값은 초과된 콘텐츠를 보이지 않게 잘라내는 역할을 합니다. */

/* appearance: none; 브라우저에서 제공하는 기본 스타일 사용 x */

/* progress tag custom 검색 */

/* Work */
.work__container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1.5rem;
}

.work__img {
  width: 100%;
  transition: 0.5s;
  display: block;
}

.work__link {
  border-radius: 1rem;
  overflow: hidden;
  box-shadow: var(--box-shadow-1);
}

.work__img:hover {
  transform: scale(1.05);
}

/* Contact */
.contact__container {
  display: flex;
  justify-content: center;
}

.contact__form {
  width: 360px;
}

.contact__input {
  width: 100%;
  outline: none;
  border: 1.5px solid var(--dark-color);
  padding: 1rem;
  border-radius: 0.5rem;
  margin-bottom: var(--spacing-1);
  font-size: var(--font-size-6);
  font-weight: var(--font-weight-bold);
}

.contact__button {
  margin-left: auto;
  display: block;
}

/* input style 검색 */

/* Footer */
.footer {
  background-color: var(--dark-color);
  color: var(--white-color);
  text-align: center;
  padding: 3rem 0;
  font-weight: var(--font-weight-bold);
}

.footer__title {
  font-size: 1.75rem;
  margin-bottom: var(--spacing-4);
}

.footer__social {
  margin-bottom: var(--spacing-4);
  display: flex;
  justify-content: center;
  column-gap: 2rem;
}

.footer__icon {
  font-size: 1.2rem;
}

.footer__copy {
  font-size: var(--font-size-6);
  font-weight: var(--font-weight-medium);
}

/* Floating Button */
.floating-button {
  position: fixed;
  color: var(--white-color);
  bottom: 20px;
  right: 20px;
  background-color: var(--primary-color);
  width: 50px;
  height: 50px;
  border-radius: 50%;
  cursor: pointer;
  box-shadow: var(--box-shadow-1);
  transition: 0.3s;
}
.floating-button:hover {
  background-color: var(--dark-color);
}

.floating-button-icon {
  font-size: 1.2rem;
}

.nav__toggle {
  display: none;
}

.show {
  right: 0 !important;
}

/* Mobile */
@media only screen and (max-width: 768px) {
  :root {
    --font-size-1: 2rem;
    --font-size-2: 1.75rem;
    --font-size-3: 1.5rem;
    --font-size-4: 1.25rem;
    --font-size-5: 0.938rem;
    --font-size-6: 0.75em;

    --header-height: 3rem;
  }
  .nav__toggle {
    display: block;
    cursor: pointer;
    padding: 0.5rem;
  }
  .nav__menu {
    position: fixed;
    background-color: var(--dark-color);
    height: 100%;
    width: 80%;
    top: var(--header-height);
    right: -100%;
    padding: 2rem;
    transition: 0.2s;
  }
  .nav__list {
    display: block;
  }
  .nav__item {
    margin-left: 0;
    margin-bottom: var(--spacing-4);
  }

  /* Home */
  .home {
    flex-direction: column-reverse;
    text-align: center;
  }
  .home__social {
    justify-content: center;
  }
  .home__title {
    margin-top: var(--spacing-3);
  }

  /* About */
  .about__container {
    flex-direction: column;
    text-align: center;
  }

  .about__subtitle {
    margin-top: var(--spacing-2);
  }

  /* Skills */
  .skills__container {
    grid-template-columns: 1fr;
    gap: 1.5rem;
    text-align: center;
  }

  /* Work */
  .work__container {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }
}

/* right: -100%;는 CSS에서 위치 설정과 관련된 속성 중 하나로, 요소의 오른쪽 끝을 기준으로 요소를 이동시키는 역할을 합니다. 이 경우, 요소를 화면의 오른쪽 바깥으로 완전히 이동시켜 보이지 않게 됨. */
